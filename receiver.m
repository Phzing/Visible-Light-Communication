M = [2.1803   -0.1933   -0.0915;
   -0.4312    1.8275   -0.2123;
    0.3308   -0.9827    1.6836];

% M = [2.0434   -0.1262   -0.0530;
%    -0.5058    1.6916   -0.2222;
%     0.3151   -0.9250    1.6194]; % for 4 levels

[bits, dat] = decoder('2025-05-05 18.42_video.tif', 64, M);

%bits = [bits, num2str(ones(1,10*1104))];
%bits = strrep(bits, ' ','');

% 1) The folder containing bits_to_msg.py
folder = 'C:\Users\g.m.herman\Downloads';

% 2) Make sure it’s on Python’s search path
if count(py.sys.path, folder) == 0
    % insert at front so it takes precedence
    py.sys.path().insert(int32(0), folder);
end

% 3) Now import your module
mod = py.importlib.import_module('bits_to_msg'); 
mod_img = py.importlib.import_module('bits_to_img');  % Make sure it's in your Python path
mod_img_rs = py.importlib.import_module('bits_to_img_RS_');  % Make sure it's in your Python path

%bits
% 4) Call the function
%result = mod_img.bits_to_msg(bits);
%disp(result);

width = int32(102); height = int32(88);
mod_img_rs.bitstream_image_RS_comparison(bits, width, height, "reconstructed.png");
img = imread("reconstructed.png");
img2 = imread("corrected_reconstructed.png");
figure();
imshow(img);
figure()
imshow(img2);



function [bits, dat] = decoder(file, num_columns, M)
    ROItimeSeries = GridROIs2timeSeries(file);
    dat = extract_and_average_frames_dualclock(ROItimeSeries, num_columns);
    bits = final_decoder(dat(:,2:end-1,:), num_columns, M);
end